Table: album
CREATE TABLE `album` (
    `AlbumId` INT NOT NULL  ,
    `Title` VARCHAR(160) NOT NULL  ,
    `ArtistId` INT NOT NULL  
    CONSTRAINT `PK_album` PRIMARY KEY (`albumId`)
    CONSTRAINT `FK_album_artist` FOREIGN KEY (`ArtistId`) REFERENCES `artist` (`ArtistId`)
);

Table: artist
CREATE TABLE `artist` (
    `ArtistId` INT NOT NULL  ,
    `Name` VARCHAR(120)   
    CONSTRAINT `PK_artist` PRIMARY KEY (`artistId`)
);

Table: customer
CREATE TABLE `customer` (
    `CustomerId` INT NOT NULL  ,
    `FirstName` VARCHAR(40) NOT NULL  ,
    `LastName` VARCHAR(20) NOT NULL  ,
    `Company` VARCHAR(80)   ,
    `Address` VARCHAR(70)   ,
    `City` VARCHAR(40)   ,
    `State` VARCHAR(40)   ,
    `Country` VARCHAR(40)   ,
    `PostalCode` VARCHAR(10)   ,
    `Phone` VARCHAR(24)   ,
    `Fax` VARCHAR(24)   ,
    `Email` VARCHAR(60) NOT NULL  ,
    `SupportRepId` INT   
    CONSTRAINT `PK_customer` PRIMARY KEY (`customerId`)
    CONSTRAINT `FK_customer_employee` FOREIGN KEY (`SupportRepId`) REFERENCES `employee` (`EmployeeId`)
);

Table: employee
CREATE TABLE `employee` (
    `EmployeeId` INT NOT NULL  ,
    `LastName` VARCHAR(20) NOT NULL  ,
    `FirstName` VARCHAR(20) NOT NULL  ,
    `Title` VARCHAR(30)   ,
    `ReportsTo` INT   ,
    `BirthDate` DATETIME   ,
    `HireDate` DATETIME   ,
    `Address` VARCHAR(70)   ,
    `City` VARCHAR(40)   ,
    `State` VARCHAR(40)   ,
    `Country` VARCHAR(40)   ,
    `PostalCode` VARCHAR(10)   ,
    `Phone` VARCHAR(24)   ,
    `Fax` VARCHAR(24)   ,
    `Email` VARCHAR(60)   
    CONSTRAINT `PK_employee` PRIMARY KEY (`employeeId`)
    CONSTRAINT `FK_employee_employee` FOREIGN KEY (`ReportsTo`) REFERENCES `employee` (`EmployeeId`)
);

Table: genre
CREATE TABLE `genre` (
    `GenreId` INT NOT NULL  ,
    `Name` VARCHAR(120)   
    CONSTRAINT `PK_genre` PRIMARY KEY (`genreId`)
);

Table: invoice
CREATE TABLE `invoice` (
    `InvoiceId` INT NOT NULL  ,
    `CustomerId` INT NOT NULL  ,
    `InvoiceDate` DATETIME NOT NULL  ,
    `BillingAddress` VARCHAR(70)   ,
    `BillingCity` VARCHAR(40)   ,
    `BillingState` VARCHAR(40)   ,
    `BillingCountry` VARCHAR(40)   ,
    `BillingPostalCode` VARCHAR(10)   ,
    `Total` decimal(10,2) NOT NULL  
    CONSTRAINT `PK_invoice` PRIMARY KEY (`invoiceId`)
    CONSTRAINT `FK_invoice_customer` FOREIGN KEY (`CustomerId`) REFERENCES `customer` (`CustomerId`)
);

Table: invoiceline
CREATE TABLE `invoiceline` (
    `InvoiceLineId` INT NOT NULL  ,
    `InvoiceId` INT NOT NULL  ,
    `TrackId` INT NOT NULL  ,
    `UnitPrice` decimal(10,2) NOT NULL  ,
    `Quantity` INT NOT NULL  
    CONSTRAINT `PK_invoiceline` PRIMARY KEY (`invoicelineId`)
    CONSTRAINT `FK_invoiceline_invoice` FOREIGN KEY (`InvoiceId`) REFERENCES `invoice` (`InvoiceId`)
    CONSTRAINT `FK_invoiceline_track` FOREIGN KEY (`TrackId`) REFERENCES `track` (`TrackId`)
);

Table: mediatype
CREATE TABLE `mediatype` (
    `MediaTypeId` INT NOT NULL  ,
    `Name` VARCHAR(120)   
    CONSTRAINT `PK_mediatype` PRIMARY KEY (`mediatypeId`)
);

Table: playlist
CREATE TABLE `playlist` (
    `PlaylistId` INT NOT NULL  ,
    `Name` VARCHAR(120)   
    CONSTRAINT `PK_playlist` PRIMARY KEY (`playlistId`)
);

Table: playlisttrack
CREATE TABLE `playlisttrack` (
    `PlaylistId` INT NOT NULL  ,
    `TrackId` INT NOT NULL  
    CONSTRAINT `PK_playlisttrack` PRIMARY KEY (`playlisttrackId`)
    CONSTRAINT `FK_playlisttrack_playlist` FOREIGN KEY (`PlaylistId`) REFERENCES `playlist` (`PlaylistId`)
    CONSTRAINT `FK_playlisttrack_track` FOREIGN KEY (`TrackId`) REFERENCES `track` (`TrackId`)
);

Table: track
CREATE TABLE `track` (
    `TrackId` INT NOT NULL  ,
    `Name` VARCHAR(200) NOT NULL  ,
    `AlbumId` INT   ,
    `MediaTypeId` INT NOT NULL  ,
    `GenreId` INT   ,
    `Composer` VARCHAR(220)   ,
    `Milliseconds` INT NOT NULL  ,
    `Bytes` INT   ,
    `UnitPrice` decimal(10,2) NOT NULL  
    CONSTRAINT `PK_track` PRIMARY KEY (`trackId`)
    CONSTRAINT `FK_track_album` FOREIGN KEY (`AlbumId`) REFERENCES `album` (`AlbumId`)
    CONSTRAINT `FK_track_genre` FOREIGN KEY (`GenreId`) REFERENCES `genre` (`GenreId`)
    CONSTRAINT `FK_track_mediatype` FOREIGN KEY (`MediaTypeId`) REFERENCES `mediatype` (`MediaTypeId`)
);

CREATE TABLE "Album" (
	"AlbumId" INTEGER NOT NULL, 
	"Title" NVARCHAR(160) NOT NULL, 
	"ArtistId" INTEGER NOT NULL, 
	PRIMARY KEY ("AlbumId"), 
	FOREIGN KEY("ArtistId") REFERENCES "Artist" ("ArtistId")
)

CREATE TABLE "Artist" (
	"ArtistId" INTEGER NOT NULL, 
	"Name" NVARCHAR(120), 
	PRIMARY KEY ("ArtistId")
)

CREATE TABLE "Customer" (
	"CustomerId" INTEGER NOT NULL, 
	"FirstName" NVARCHAR(40) NOT NULL, 
	"LastName" NVARCHAR(20) NOT NULL, 
	"Company" NVARCHAR(80), 
	"Address" NVARCHAR(70), 
	"City" NVARCHAR(40), 
	"State" NVARCHAR(40), 
	"Country" NVARCHAR(40), 
	"PostalCode" NVARCHAR(10), 
	"Phone" NVARCHAR(24), 
	"Fax" NVARCHAR(24), 
	"Email" NVARCHAR(60) NOT NULL, 
	"SupportRepId" INTEGER, 
	PRIMARY KEY ("CustomerId"), 
	FOREIGN KEY("SupportRepId") REFERENCES "Employee" ("EmployeeId")
)

CREATE TABLE "Employee" (
	"EmployeeId" INTEGER NOT NULL, 
	"LastName" NVARCHAR(20) NOT NULL, 
	"FirstName" NVARCHAR(20) NOT NULL, 
	"Title" NVARCHAR(30), 
	"ReportsTo" INTEGER, 
	"BirthDate" DATETIME, 
	"HireDate" DATETIME, 
	"Address" NVARCHAR(70), 
	"City" NVARCHAR(40), 
	"State" NVARCHAR(40), 
	"Country" NVARCHAR(40), 
	"PostalCode" NVARCHAR(10), 
	"Phone" NVARCHAR(24), 
	"Fax" NVARCHAR(24), 
	"Email" NVARCHAR(60), 
	PRIMARY KEY ("EmployeeId"), 
	FOREIGN KEY("ReportsTo") REFERENCES "Employee" ("EmployeeId")
)

CREATE TABLE "Genre" (
	"GenreId" INTEGER NOT NULL, 
	"Name" NVARCHAR(120), 
	PRIMARY KEY ("GenreId")
)

CREATE TABLE "Invoice" (
	"InvoiceId" INTEGER NOT NULL, 
	"CustomerId" INTEGER NOT NULL, 
	"InvoiceDate" DATETIME NOT NULL, 
	"BillingAddress" NVARCHAR(70), 
	"BillingCity" NVARCHAR(40), 
	"BillingState" NVARCHAR(40), 
	"BillingCountry" NVARCHAR(40), 
	"BillingPostalCode" NVARCHAR(10), 
	"Total" NUMERIC(10, 2) NOT NULL, 
	PRIMARY KEY ("InvoiceId"), 
	FOREIGN KEY("CustomerId") REFERENCES "Customer" ("CustomerId")
)

CREATE TABLE "InvoiceLine" (
	"InvoiceLineId" INTEGER NOT NULL, 
	"InvoiceId" INTEGER NOT NULL, 
	"TrackId" INTEGER NOT NULL, 
	"UnitPrice" NUMERIC(10, 2) NOT NULL, 
	"Quantity" INTEGER NOT NULL, 
	PRIMARY KEY ("InvoiceLineId"), 
	FOREIGN KEY("TrackId") REFERENCES "Track" ("TrackId"), 
	FOREIGN KEY("InvoiceId") REFERENCES "Invoice" ("InvoiceId")
)

CREATE TABLE "MediaType" (
	"MediaTypeId" INTEGER NOT NULL, 
	"Name" NVARCHAR(120), 
	PRIMARY KEY ("MediaTypeId")
)

CREATE TABLE "Playlist" (
	"PlaylistId" INTEGER NOT NULL, 
	"Name" NVARCHAR(120), 
	PRIMARY KEY ("PlaylistId")
)

CREATE TABLE "PlaylistTrack" (
	"PlaylistId" INTEGER NOT NULL, 
	"TrackId" INTEGER NOT NULL, 
	PRIMARY KEY ("PlaylistId", "TrackId"), 
	FOREIGN KEY("TrackId") REFERENCES "Track" ("TrackId"), 
	FOREIGN KEY("PlaylistId") REFERENCES "Playlist" ("PlaylistId")
)

CREATE TABLE "Track" (
	"TrackId" INTEGER NOT NULL, 
	"Name" NVARCHAR(200) NOT NULL, 
	"AlbumId" INTEGER, 
	"MediaTypeId" INTEGER NOT NULL, 
	"GenreId" INTEGER, 
	"Composer" NVARCHAR(220), 
	"Milliseconds" INTEGER NOT NULL, 
	"Bytes" INTEGER, 
	"UnitPrice" NUMERIC(10, 2) NOT NULL, 
	PRIMARY KEY ("TrackId"), 
	FOREIGN KEY("MediaTypeId") REFERENCES "MediaType" ("MediaTypeId"), 
	FOREIGN KEY("GenreId") REFERENCES "Genre" ("GenreId"), 
	FOREIGN KEY("AlbumId") REFERENCES "Album" ("AlbumId")
)
